syntax = "proto3";

package judge;

option go_package = "/judge";

service JudgeService {
    rpc CreateTestCase(CreateTestCaseRequest) returns (CreateTestCaseResponse);
    rpc GetAllTestCases(GetAllTestCasesRequest) returns (GetAllTestCasesResponse);
    rpc GetTestCase(GetTestCaseRequest) returns (GetTestCaseResponse);
    rpc UpdateTestCase(UpdateTestCaseRequest) returns (UpdateTestCaseResponse);
    rpc DeleteTestCase(DeleteTestCaseRequest) returns (DeleteTestCaseResponse);
    rpc DeleteAllTestCases(DeleteAllTestCasesRequest) returns (DeleteAllTestCasesResponse);
    rpc RunTests(RunTestsRequest) returns (RunTestsResponse);
}

message RunTestsRequest {
    string task_id = 1;
    string code = 2;
}

message TestResult {
    string test_case_id = 1;
    bool passed = 2;
    string output = 3;
    string expected_output = 4;
}

message RunTestsResponse {
    repeated TestResult results = 1;
}

message TestCase {
    string task_id = 1;
    string test_case_id = 2;
    bool has_input = 3;
    string input = 4;
    string expected_output = 5;
}

message CreateTestCaseRequest {
    string task_id = 1;
    bool has_input = 3;
    string input = 4;
    string expected_output = 5;
}

message CreateTestCaseResponse {
    TestCase test_case = 1;
}

message GetAllTestCasesRequest {
    string task_id = 1;
}

message GetAllTestCasesResponse {
    repeated TestCase test_cases = 1;
}

message GetTestCaseRequest {
    string task_id = 1;
    string test_case_id = 2;
}

message GetTestCaseResponse {
    TestCase test_case = 1;
}

message UpdateTestCaseRequest {
    string task_id = 1;
    string test_case_id = 2;
    bool has_input = 3;
    string input = 4;
    string expected_output = 5;
}

message UpdateTestCaseResponse {
    TestCase test_case = 1;
}

message DeleteTestCaseRequest {
    string task_id = 1;
    string test_case_id = 2;
}

message DeleteTestCaseResponse {
    bool success = 1;
}

message DeleteAllTestCasesRequest {
    string task_id = 1;
}

message DeleteAllTestCasesResponse {
    bool success = 1;
}
