services:

  broker:
    container_name: broker
    build:
      context: ./services/broker
      dockerfile: ./broker.dockerfile
    restart: always
    ports:
      - "8000:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  user:
    container_name: user
    build:
      context: ./services/user
      dockerfile: ./user.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  content-fetcher:
    container_name: content-fetcher
    build:
      context: ./services/content-fetcher
      dockerfile: ./content-fetcher.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file: 
      - .env

  judge:
    container_name: judge
    build:
      context: ./services/judge
      dockerfile: ./judge.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  compiler:
    container_name: compiler
    build:
      context: ./services/compiler
      dockerfile: ./compiler.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  postgres:
    container_name: db-users
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    container_name: db-testcases
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - ./db-data/mongo/:/data/db
