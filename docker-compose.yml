services:

  broker:
    container_name: broker
    build:
      context: ./services/broker
      dockerfile: ./broker.dockerfile
    restart: always
    ports:
      - "8000:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  # user:
  #   container_name: user
  #   build:
  #     context: ./services/user
  #     dockerfile: ./user.dockerfile
  #   restart: always
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file:
  #     - .env

  course:
    container_name: course
    build:
      context: ./services/course
      dockerfile: ./course.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  content-fetcher:
    container_name: content-fetcher
    build:
      context: ./services/content-fetcher
      dockerfile: ./content-fetcher.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file: 
      - .env

  judge:
    container_name: judge
    build:
      context: ./services/judge
      dockerfile: ./judge.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

  compiler:
    container_name: compiler
    build:
      context: ./services/compiler
      dockerfile: ./compiler.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env

    # # Uncomment the following to work with the mongo database in a container
  # mongo:
  #   container_name: mongo
  #   image: 'mongo:4.2.16-bionic'
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_DATABASE: db
  #     MONGO_INITDB_ROOT_USERNAME: mongo
  #     MONGO_INITDB_ROOT_PASSWORD: mongo  
  #   volumes:
  #     - ./db-data/mongo/:/data/db